<?php
// +----------------------------------------------------------------------
// | OneThink [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013 http://www.onethink.cn All rights reserved.
// +----------------------------------------------------------------------
// | Author: 麦当苗儿 <zuojiazi@vip.qq.com> <http://www.zjzit.cn>
// +----------------------------------------------------------------------

namespace Home\Controller;
use Common\Controller\BaseController;

/**
 * 前台公共控制器
 * 为防止多分组Controller名称冲突，公共Controller名称统一使用分组名称
 */
class StatisticsController extends BaseController {

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('current','statistics');
    }

    public function index(){


		$this->display();
	}
	
	/*
	 * 单个委员量化信息
	 * author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 *
	 */
	public function weiyuan(){
		$user_id = get_uid();
		
		$year = I('post.year');
		$year = $year ? $year : date('Y',time()) ;
		
		
		$m = D('User/User');
		$m->setModel(WEIYUAN);
		$member = $m->getUser($user_id);
		$this->getStatisticsResult($member['proposal'],$user_id,$year);

		//出席区全体委员会议
		

		$this->assign('member',$member);
		$this->display();
	}
	
	/*
	 * 获取需要展示的委员量化统计的字段
	 *
	 *
	 */
	private function getStatisticsResult(&$arr=array(),$user_id,$year){
	
		$action_arr = array(17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43);
		foreach($action_arr as $v){
			$arr['action'.$v] = $this->getActionResult($v,$user_id,$year);
			
		}
		
	}
	/*
	 * 委员量化统计   政协办公室权限
	 * author:MR.Z <327778155@qq.com>
	 *  create: 2016/9/9
	 *
	 */
	public function weiyuans($page = 1){
		$m = D('User/User');
		$m->setModel(WEIYUAN);
		$proposal_weiyuan = $m->getUsers(array(),array('名称','手机号','专委会','街道联络委'));

		$pagesize = 16;
		$year = I('post.year');
		$year = $year ? $year : date('Y',time()) ;
		$data = $this->page_array($pagesize,$page,$proposal_weiyuan);
		$totalCount = count($proposal_weiyuan);
		
		foreach($data as $k=>$v){
			
			$this->getStatisticsResult($data[$k]['proposal'],$v['uid'],$year);
		}


		$this->assign('totalPageCount', $totalCount);
		$this->assign('data',$data);
		$this->display();
	}
	
	
	/*
	 * 获取年度内量化信息结果
	 *
	 */
	private function getActionResult($action_id,$user_id,$year){
		
		$map['create_time'] = array('BETWEEN',strtotime("{$year}-01-01").','.strtotime("{$year}-12-31"));
		
		
		$count = D('ActionLog')->where(array('user_id'=>$user_id,'action_id'=>$action_id,$map))->count();

		$rule = parse_action($action_id,$user_id);
		$rule = reset($rule);
		preg_match('/([\d]+)/',$rule['rule'],$match);
		$score = reset($match);

		if($rule['max'] < $count){
			$total_score = $score * $rule['max'] ;
			
		}else{
			$total_score = $score * $count;
		}
	
		$total_score = $total_score ? $total_score:0;
		$data['count'] = $count;
		$data['total_score'] = $total_score;
		return  $data;
		
	}
	
	
	

	
	/*
	 * 按委员或集体统计
	 * author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 *
	 */
	public function byMember(){
		$page = I('get.page') ? I('get.page') : 1;
		$m = D('User/User');
		$m->setModel(WEIYUAN);
		$proposal_weiyuan = $m->getUsers(array(),array('名称'));
		$m->setModel(TEAM);
		$proposal_team = $m->getUsers(array(),array('名称'));
		$proposal_weiyuan = array_merge_recursive($proposal_weiyuan,$proposal_team);

		foreach($proposal_weiyuan as &$v){
			$v['count'] = reset(M()->query("select sum(case when recommend like '%1%' then 1 else 0 end) as countz,
												sum(case when recommend like '%2%' then 1 else 0 end) as countt,
												sum(case when recommend like  '%3%' then 1 else 0 end) as countj,
												sum(case when status not in (0,1,2,3,4,5,6,7) then 1 else 0 end) as countl,
												sum(case when status not in (0,1) then 1 else 0 end) as countta from __PROPOSAL__ 
												where uid={$v['uid']}"));
			
		}
		//print_r($proposal_weiyuan);
		
		$totalCount = count($proposal_weiyuan);
		
		$pagesize = 16;
		$data = $this->page_array($pagesize,$page,$proposal_weiyuan);
		$this->assign('totalPageCount', $totalCount);
		$this->assign('statistics',$data);
		$this->display();
	}
	
	
	/*
 * 按提案类别统计
 * author: MR.Z <327778155@qq.com>
 * create: 2016/9/9
 */
	public function byType(){
		$types = D('ProposalType')->where('status=1')->select();
		foreach($types as &$v){
			$v['count'] = reset(M()->query("select sum(case when recommend like '%1%' then 1 else 0 end) as countz,
												sum(case when recommend like '%2%' then 1 else 0 end) as countt,
												sum(case when recommend like  '%3%' then 1 else 0 end) as countj,
												sum(case when status not in (0,1,2,3,4,5,6,7) then 1 else 0 end) as countl,
												sum(case when status not in (0,1) then 1 else 0 end) as countta from __PROPOSAL__ 
												where type_id={$v['id']}"));
	
		}
		
		$this->assign('statistics',$types);
		$this->display();
	}
	
	
	/*
	 * 按提案统计
	 * author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 */
	public function byProposal(){
		$data = reset(M()->query("select sum(case when recommend like '%1%' then 1 else 0 end) as countz,
												sum(case when recommend like '%2%' then 1 else 0 end) as countt,
												sum(case when recommend like  '%3%' then 1 else 0 end) as countj,
												sum(case when status not in (0,1,2,3,4,5,6,7) then 1 else 0 end) as countl,
												sum(case when status not in (0,1) then 1 else 0 end) as countta from __PROPOSAL__ 
												where status not in (0,1)"));

		$this->assign('data',$data);
		$this->display();
	}
	
	
	/*
 * 按提案满意数统计
 * author: MR.Z <327778155@qq.com>
 * create: 2016/9/9
 *
 */
	public function  bySatisfy(){
		$data = reset(M()->query("select sum(case when comment = 1 then 1 else 0 end) as comment1,
												sum(case when comment = 2 then 1 else 0 end) as comment2,
												sum(case when comment = 3 then 1 else 0 end) as comment3
												 from __PROPOSAL_RESULT__ 
												"));

		$this->assign('data',$data);
		
		
		$this->display();
	}
	
	
	/*
	 * 按办理单位数统计
	 *  author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 *
	 */
	public function byUnitNumber(){
		$m = D('User/User');
		$m->setModel(UNIT);
		$members = $m->getUsers(array(),array('名称'));
		$newmembers = array();
		foreach($members as $v){
			$newmembers[$v[uid]] = $v;
		}
		

		$data = D('ProposalResult')->where(array('status'=>2))->group('user_id')->getField('user_id,count(user_id)');

		
		foreach($newmembers as $k=>$member){
			$newmembers[$k]['docount'] = $data[$k];
		}
		
		
	/*	foreach($data as $k=>$da){
			if(isset($newmembers[$k])){
				
				$data[$k] = $newmembers[$k];
				$data[$k]['docount'] = $da;
			}
		}
		*/
		$this->assign('data',$newmembers);
		$this->display();
	}
	
	/*
	 * 按专委会统计
	 * author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 *
	 */
	public function byZwh(){

		$zwhstr = D('FieldSetting')->where(array('field_name'=>'专委会','profile_group_id'=>WEIYUAN))->getField('form_default_value');
		$zwharr = explode('|',$zwhstr);
		$data = array();
		foreach($zwharr as $k=>$z){
			$data[$k]['name'] = $z;
			$data[$k]['count'] = reset(M()->query("select sum(case when recommend like '%1%' then 1 else 0 end) as countz,
												sum(case when recommend like '%2%' then 1 else 0 end) as countt,
												sum(case when recommend like  '%3%' then 1 else 0 end) as countj,
												sum(case when status not in (0,1,2,3,4,5,6,7) then 1 else 0 end) as countl,
												sum(case when status not in (0,1) then 1 else 0 end) as countta from __PROPOSAL__ 
												where zwh='{$z}'"));

		}
	
		$this->assign('data',$data);
		$this->display();
	}
	
	/*
	 * 按界别组统计
	 * author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 */
	public function byJiebie(){
		$jiebiestr = D('FieldSetting')->where(array('field_name'=>'界别','profile_group_id'=>WEIYUAN))->getField('form_default_value');
		$jiebiearr = explode('|',$jiebiestr);
		$data = array();
		foreach($jiebiearr as $k=>$j){
			$data[$k]['name'] = $j;
			$data[$k]['count'] = reset(M()->query("select sum(case when recommend like '%1%' then 1 else 0 end) as countz,
												sum(case when recommend like '%2%' then 1 else 0 end) as countt,
												sum(case when recommend like  '%3%' then 1 else 0 end) as countj,
												sum(case when status not in (0,1,2,3,4,5,6,7) then 1 else 0 end) as countl,
												sum(case when status not in (0,1) then 1 else 0 end) as countta from __PROPOSAL__ 
												where jiebie='{$j}'"));
			
		}
		
		$this->assign('data',$data);
		
		
		$this->display();
	}
	

	
	/*
	 * 按街道联络统计
	 * author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 */
	public function byJdllw(){
		$jdllwstr = D('FieldSetting')->where(array('field_name'=>'街道联络委','profile_group_id'=>WEIYUAN))->getField('form_default_value');
		$jdllwarr = explode('|',$jdllwstr);
		$data = array();
		foreach($jdllwarr as $k=>$j){
			$data[$k]['name'] = $j;
			$data[$k]['count'] = reset(M()->query("select sum(case when recommend like '%1%' then 1 else 0 end) as countz,
												sum(case when recommend like '%2%' then 1 else 0 end) as countt,
												sum(case when recommend like  '%3%' then 1 else 0 end) as countj,
												sum(case when status not in (0,1,2,3,4,5,6,7) then 1 else 0 end) as countl,
												sum(case when status not in (0,1) then 1 else 0 end) as countta from __PROPOSAL__ 
												where jdllw='{$j}'"));
			
		}
		$this->assign('data',$data);
		$this->display();
	}
	
	
	
	/*
	 * 按办理结果统计
	 * author: MR.Z <327778155@qq.com>
	 * create: 2016/9/9
	 */
	public function byResult(){
		$data = reset(M()->query("select sum(case when rate like 'A%' then 1 else 0 end) as rateA,
												sum(case when rate like 'B%' then 1 else 0 end) as rateB,
												sum(case when rate like 'C%'  then 1 else 0 end) as rateC
												 from __PROPOSAL_RESULT__ 
												"));

		$this->assign('data',$data);
		
		

		$this->display();
	}


	/*
	 * 盘点积分    清算  会议 活动的积分
	 * status 2  为盘点信息标记 针对action_log表
	 * author: MR.Z <327778155@qq.com>
	 * crreate: 2016/09/26
	 */
	public function makeScore(){
	 //   if(IS_POST){
            $map_a['is_make'] = ['eq',1];
            $actions =  D('Action')->where($map_a)->getField('id', 'rule');
            $start_time = time();
            $end_time = time();
        //测试设置is_make 为1
            $map_al['model'] = 'proposal';
            $map_al['is_make'] = ['eq',0];
         //   $map_al['create_time'] = ['between',$start_time.','.$end_time];

            $data = D('ActionLog')->where($map_al)->group('record_id,action_id')->order('create_time desc')->select();

        /*18 出席区政协全体委员会议
        19 参加专委会（组）、街道联络委员会组织的活动
        43 参加区政协办公室、委员工作委员会组织的活动
        当前只有这三个行为是需要手工盘点积分
        */

        $action_arr = [18,43,19];
        $mu = D('User/User');
        $mu->setModel(WEIYUAN);
        $uids = $mu->getUsers();



        $total_18 = S('total_18');
        $total_19 = S('total_19');
        $total_43 = S('total_43');
        foreach($uids as $v){
            $rule_18 = parse_action(18,$v['uid']);
            $rule_43 = parse_action(43,$v['uid']);
            $rule_19 = parse_action(19,$v['uid']);
            $map_u['user_id'] = $v['uid'];
            $map_u['action_id'] = 18;
            $count_18 =  M('ActionLog')->where($map_u)->count();
            $map_u['action_id'] = 19;
            $count_19 =  M('ActionLog')->where($map_u)->count();
            $map_u['action_id'] = 43;
            $count_43 =  M('ActionLog')->where($map_u)->count();

            $score_18 = 40 * ($count_18/$total_18);

            $score_19 = 20 * ($count_19/$total_19);

            $score_43 = 20 * ($count_43/$total_43);

            $make_score = $score_18 + $score_19 + $score_43;

            //清除之前的盘点积分
           M('Member')->where('uid='.$v['uid'])->setDec('score','make_score');

            M('Member')->where('uid='.$v['uid'])->save(['make_score'=>0]);


            $data['uid'] = $v['uid'];
            $data['make_score'] = $make_score;
            M('Member')->save($data);

        }


        $this->success('盘点积分更新完成');


     //   }
    }
	
	/**
	 * 数组分页函数 核心函数 array_slice
	 * 用此函数之前要先将数据库里面的所有数据按一定的顺序查询出来存入数组中
	 * $count  每页多少条数据
	 * $page  当前第几页
	 * $array  查询出来的所有数组
	 * order 0 - 不变   1- 反序
	 */
	private function page_array($count,$page,$array,$order){
		global $countpage; #定全局变量
		$page=(empty($page))?'1':$page; #判断当前页面是否为空 如果为空就表示为第一页面
		$start=($page-1)*$count; #计算每次分页的开始位置
		if($order==1){
			$array=array_reverse($array);
		}
		$totals=count($array);
		$countpage=ceil($totals/$count); #计算总页面数
	
		$pagedata=array();
		$pagedata=array_slice($array,$start,$count);
		return $pagedata; #返回查询数据
	}
	
	

}
